name: Python Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - dev
      - feature/*
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: sdist
          overwrite: true


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest] #, macos-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: auto64

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: wheelhouse/*.whl
          name: wheels-${{ matrix.os }}
          overwrite: true


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Download wheels artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: dist/

      - name: Download windows wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest
          path: dist/

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      - uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
